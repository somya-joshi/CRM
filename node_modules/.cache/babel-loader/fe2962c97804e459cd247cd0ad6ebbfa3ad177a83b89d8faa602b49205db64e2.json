{"ast":null,"code":"var _jsxFileName = \"E:\\\\oms_reactJs\\\\oms\\\\src\\\\omsOrderComponent\\\\GridExample.jsx\",\n  _s = $RefreshSig$();\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport React, { useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\n\n// Create new GridExample component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridExample = () => {\n  _s();\n  // Row Data: The data to be displayed.\n  const [rowData, setRowData] = useState([]);\n\n  // Column Definitions: Defines & controls grid columns.\n  const [colDefs] = useState([{\n    field: 'mission'\n  }, {\n    field: 'company'\n  }, {\n    field: 'location'\n  }, {\n    field: 'date'\n  }, {\n    field: 'price'\n  }, {\n    field: 'successful'\n  }, {\n    field: 'rocket'\n  }]);\n\n  // Fetch data & update rowData state\n  useEffect(() => {\n    fetch('https://www.ag-grid.com/example-assets/space-mission-data.json') // Fetch data from server\n    .then(result => result.json()) // Convert to JSON\n    .then(rowData => setRowData(rowData)); // Update state of `rowData`\n  }, []);\n\n  // Container: Defines the grid's theme & dimensions.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-quartz\",\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: colDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n// Render GridExample\n_s(GridExample, \"2COKZ7lHUOnkfXUUdwy2npCd/KE=\");\n_c = GridExample;\nconst root = createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(GridExample, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"GridExample\");","map":{"version":3,"names":["AgGridReact","React","useEffect","useState","createRoot","jsxDEV","_jsxDEV","GridExample","_s","rowData","setRowData","colDefs","field","fetch","then","result","json","className","style","width","height","children","columnDefs","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","document","getElementById","render","$RefreshReg$"],"sources":["E:/oms_reactJs/oms/src/omsOrderComponent/GridExample.jsx"],"sourcesContent":["import 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\n// Create new GridExample component\r\nconst GridExample = () => {\r\n  // Row Data: The data to be displayed.\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // Column Definitions: Defines & controls grid columns.\r\n  const [colDefs] = useState([\r\n    { field: 'mission' },\r\n    { field: 'company' },\r\n    { field: 'location' },\r\n    { field: 'date' },\r\n    { field: 'price' },\r\n    { field: 'successful' },\r\n    { field: 'rocket' },\r\n  ]);\r\n\r\n  // Fetch data & update rowData state\r\n  useEffect(() => {\r\n    fetch('https://www.ag-grid.com/example-assets/space-mission-data.json') // Fetch data from server\r\n      .then((result) => result.json()) // Convert to JSON\r\n      .then((rowData) => setRowData(rowData)); // Update state of `rowData`\r\n  }, []);\r\n\r\n  // Container: Defines the grid's theme & dimensions.\r\n  return (\r\n    <div\r\n      className={\r\n        \"ag-theme-quartz\"\r\n      }\r\n      style={{ width: '100%', height: '100%' }}\r\n    >\r\n      <AgGridReact rowData={rowData} columnDefs={colDefs} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Render GridExample\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(<GridExample />);"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AACrD,SAASA,WAAW,QAAQ,eAAe;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACQ,OAAO,CAAC,GAAGR,QAAQ,CAAC,CACzB;IAAES,KAAK,EAAE;EAAU,CAAC,EACpB;IAAEA,KAAK,EAAE;EAAU,CAAC,EACpB;IAAEA,KAAK,EAAE;EAAW,CAAC,EACrB;IAAEA,KAAK,EAAE;EAAO,CAAC,EACjB;IAAEA,KAAK,EAAE;EAAQ,CAAC,EAClB;IAAEA,KAAK,EAAE;EAAa,CAAC,EACvB;IAAEA,KAAK,EAAE;EAAS,CAAC,CACpB,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,gEAAgE,CAAC,CAAC;IAAA,CACrEC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAChCF,IAAI,CAAEL,OAAO,IAAKC,UAAU,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEH,OAAA;IACEW,SAAS,EACP,iBACD;IACDC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAEzCf,OAAA,CAACN,WAAW;MAACS,OAAO,EAAEA,OAAQ;MAACa,UAAU,EAAEX;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;;AAED;AAAAlB,EAAA,CAnCMD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAoCjB,MAAMqB,IAAI,GAAGxB,UAAU,CAACyB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACxDF,IAAI,CAACG,MAAM,eAACzB,OAAA,CAACC,WAAW;EAAAgB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}