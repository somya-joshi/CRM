{"ast":null,"code":"var _jsxFileName = \"E:\\\\oms_reactJs\\\\oms\\\\src\\\\omsOrderComponent\\\\GridExample.jsx\",\n  _s = $RefreshSig$();\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport React, { useEffect, useMemo, useState } from 'react';\n//import { createRoot } from 'react-dom/client';\nimport Button from 'react-bootstrap/Button';\n\n/* Format Date Cells */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateFormatter = params => {\n  return new Date(params.value).toLocaleDateString('en-us', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n// Create new GridExample component\nconst GridExample = () => {\n  _s();\n  // Row Data: The data to be displayed.\n  const [rowData, setRowData] = useState([]);\n\n  // Column Definitions: Defines & controls grid columns.\n  const [colDefs] = useState([{\n    field: 'displayOrderId'\n  }, {\n    field: 'customerName'\n  }]);\n\n  // Fetch data & update rowData state\n  useEffect(() => {\n    fetch('https://www.ag-grid.com/example-assets/space-mission-data.json').then(result => result.json()).then(rowData => setRowData(rowData));\n  }, []);\n\n  // Apply settings across all columns\n  const defaultColDef = useMemo(() => ({\n    filter: true,\n    editable: true\n  }), []);\n\n  // Container: Defines the grid's theme & dimensions.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-quartz\",\n    style: {\n      width: '600px',\n      height: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      style: {\n        \"postion\": \"right-top\"\n      },\n      children: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: colDefs,\n      defaultColDef: defaultColDef,\n      pagination: true,\n      rowSelection: \"multiple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GridExample, \"rbTA3rtJ2ro097jAx0tHBljXx/Q=\");\n_c = GridExample;\nexport default GridExample;\nvar _c;\n$RefreshReg$(_c, \"GridExample\");","map":{"version":3,"names":["AgGridReact","React","useEffect","useMemo","useState","Button","jsxDEV","_jsxDEV","dateFormatter","params","Date","value","toLocaleDateString","weekday","year","month","day","GridExample","_s","rowData","setRowData","colDefs","field","fetch","then","result","json","defaultColDef","filter","editable","className","style","width","height","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","columnDefs","pagination","rowSelection","_c","$RefreshReg$"],"sources":["E:/oms_reactJs/oms/src/omsOrderComponent/GridExample.jsx"],"sourcesContent":["\r\n\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\n//import { createRoot } from 'react-dom/client';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n/* Format Date Cells */\r\nconst dateFormatter = (params) => {\r\n  return new Date(params.value).toLocaleDateString('en-us', {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n};\r\n// Create new GridExample component\r\nconst GridExample = () => {\r\n  // Row Data: The data to be displayed.\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // Column Definitions: Defines & controls grid columns.\r\n  const [colDefs] = useState([\r\n\r\n    { field: 'displayOrderId' },\r\n    { field: 'customerName' }\r\n    \r\n  ]);\r\n\r\n  // Fetch data & update rowData state\r\n  useEffect(() => {\r\n    fetch('https://www.ag-grid.com/example-assets/space-mission-data.json')\r\n      .then((result) => result.json())\r\n      .then((rowData) => setRowData(rowData));\r\n  }, []);\r\n\r\n  // Apply settings across all columns\r\n  const defaultColDef = useMemo(() => ({\r\n    filter: true,\r\n    editable: true,\r\n  }), []);\r\n\r\n  // Container: Defines the grid's theme & dimensions.\r\n  return (\r\n    <div\r\n      className={\r\n        \"ag-theme-quartz\"\r\n      }\r\n      style={{ width: '600px', height: '500px' }}\r\n    >\r\n      <Button variant=\"primary\" style={{ \"postion\": \"right-top\" }}>Primary</Button>\r\n      <AgGridReact\r\n        rowData={rowData}\r\n        columnDefs={colDefs}\r\n        defaultColDef={defaultColDef}\r\n        pagination={true}\r\n        rowSelection=\"multiple\"\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default GridExample;"],"mappings":";;AAEA,OAAO,sCAAsC;AAC7C,OAAO,8CAA8C;AACrD,SAASA,WAAW,QAAQ,eAAe;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D;AACA,OAAOC,MAAM,MAAM,wBAAwB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAIC,MAAM,IAAK;EAChC,OAAO,IAAIC,IAAI,CAACD,MAAM,CAACE,KAAK,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;IACxDC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACiB,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAEzB;IAAEkB,KAAK,EAAE;EAAiB,CAAC,EAC3B;IAAEA,KAAK,EAAE;EAAe,CAAC,CAE1B,CAAC;;EAEF;EACApB,SAAS,CAAC,MAAM;IACdqB,KAAK,CAAC,gEAAgE,CAAC,CACpEC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAAEL,OAAO,IAAKC,UAAU,CAACD,OAAO,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,aAAa,GAAGxB,OAAO,CAAC,OAAO;IACnCyB,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEP;EACA,oBACEtB,OAAA;IACEuB,SAAS,EACP,iBACD;IACDC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE3C3B,OAAA,CAACF,MAAM;MAAC8B,OAAO,EAAC,SAAS;MAACJ,KAAK,EAAE;QAAE,SAAS,EAAE;MAAY,CAAE;MAAAG,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7EhC,OAAA,CAACP,WAAW;MACVmB,OAAO,EAAEA,OAAQ;MACjBqB,UAAU,EAAEnB,OAAQ;MACpBM,aAAa,EAAEA,aAAc;MAC7Bc,UAAU,EAAE,IAAK;MACjBC,YAAY,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}