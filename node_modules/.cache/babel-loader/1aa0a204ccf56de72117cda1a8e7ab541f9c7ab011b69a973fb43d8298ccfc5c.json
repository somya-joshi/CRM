{"ast":null,"code":"var _jsxFileName = \"E:\\\\oms_reactJs\\\\oms\\\\src\\\\agGridTable\\\\GridExample.jsx\",\n  _s = $RefreshSig$();\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport NewOrder from './NewOrder';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\n\n/* Format Date Cells */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateFormatter = params => {\n  return new Date(params.value).toLocaleDateString('en-us', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\nconst GridExample = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [open, SetOpen] = useState(false); //open place order \n\n  const handleOpen = () => {\n    SetOpen(true); //open place order \n  };\n  const handleClose = () => {\n    SetOpen(false); //close place order \n  };\n  const [colDefs] = useState([{\n    headerName: 'display_OrderId',\n    field: 'displayOrderId'\n  }, {\n    headerName: 'customer_Name',\n    field: 'customerName'\n  }, {\n    headerName: 'product_Name',\n    field: 'productName'\n  }, {\n    headerName: 'customer_Name',\n    field: 'customerName'\n  }, {\n    headerName: 'mobile_No',\n    field: 'mobileNo'\n  }, {\n    headerName: 'model_No',\n    field: 'modelNo'\n  },\n  // {headerName:'Product_Color', field: 'ProductColor' },\n  {\n    headerName: 'category',\n    field: 'category'\n  }, {\n    headerName: 'sub_Category',\n    field: 'subCategory'\n  }, {\n    headerName: 'discription',\n    field: 'discription'\n  }, {\n    headerName: 'order_Date',\n    field: 'orderDate'\n  }, {\n    headerName: 'expected_Delivery_Date',\n    field: 'expectedDeliveryDate'\n  }, {\n    headerName: 'logistic_Name',\n    field: 'logisticName'\n  }, {\n    headerName: 'awbNo',\n    field: 'awbNo'\n  }, {\n    headerName: 'coupon_Code',\n    field: 'couponCode'\n  }, {\n    headerName: \"Action\",\n    field: \"displayOrderId\",\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => updatehandler(params.data),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => deletehandler(params.value),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }, this)\n  }]);\n  const getOrders = async () => {\n    const result = await axios.get('http://localhost:8080/getcustomerorders');\n    console.log(result.data);\n    setRowData(result.data);\n  };\n  useEffect(() => {\n    getOrders();\n  }, []);\n  const updatehandler = async olddata => {\n    const result = await axios.get(`http://localhost:8080/employee/${olddata}`);\n    setRowData(result.data);\n  };\n  const deletehandler = async displayOrderId => {\n    await axios.delete(`http://localhost:8080/deleteorder/${displayOrderId}`);\n    getOrders();\n  };\n\n  // Apply settings across all columns\n  const defaultColDef = useMemo(() => ({\n    filter: true,\n    editable: true\n  }), []);\n\n  // Container: Defines the grid's theme & dimensions.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-quartz\",\n      style: {\n        width: '1000px',\n        height: '500px',\n        margin: '10px',\n        padding: '1px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        align: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"place order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: rowData,\n        columnDefs: colDefs,\n        defaultColDef: defaultColDef,\n        pagination: true,\n        rowSelection: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewOrder, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(GridExample, \"cZLla8HsPys2tQsPt6r4jGoEClM=\");\n_c = GridExample;\nexport default GridExample;\nvar _c;\n$RefreshReg$(_c, \"GridExample\");","map":{"version":3,"names":["AgGridReact","React","useEffect","useMemo","useState","NewOrder","axios","Button","jsxDEV","_jsxDEV","dateFormatter","params","Date","value","toLocaleDateString","weekday","year","month","day","GridExample","_s","rowData","setRowData","open","SetOpen","handleOpen","handleClose","colDefs","headerName","field","cellRenderer","children","variant","onClick","updatehandler","data","fileName","_jsxFileName","lineNumber","columnNumber","deletehandler","getOrders","result","get","console","log","olddata","displayOrderId","delete","defaultColDef","filter","editable","className","style","width","height","margin","padding","align","columnDefs","pagination","rowSelection","_c","$RefreshReg$"],"sources":["E:/oms_reactJs/oms/src/agGridTable/GridExample.jsx"],"sourcesContent":["\r\n\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport NewOrder from './NewOrder'\r\n\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n/* Format Date Cells */\r\nconst dateFormatter = (params) => {\r\n  return new Date(params.value).toLocaleDateString('en-us', {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n};\r\n\r\nconst GridExample = () => {\r\n  const [rowData, setRowData] = useState([]);\r\n  const [open, SetOpen] = useState(false); //open place order \r\n\r\n  const handleOpen = () => { \r\n    SetOpen(true) //open place order \r\n  }\r\n  const handleClose = () => {\r\n    SetOpen(false) //close place order \r\n  }\r\n\r\n  const [colDefs] = useState([\r\n    { headerName: 'display_OrderId', field: 'displayOrderId' },\r\n    { headerName: 'customer_Name', field: 'customerName' },\r\n    { headerName: 'product_Name', field: 'productName' },\r\n    { headerName: 'customer_Name', field: 'customerName' },\r\n    { headerName: 'mobile_No', field: 'mobileNo' },\r\n    { headerName: 'model_No', field: 'modelNo' },\r\n    // {headerName:'Product_Color', field: 'ProductColor' },\r\n    { headerName: 'category', field: 'category' },\r\n    { headerName: 'sub_Category', field: 'subCategory' },\r\n    { headerName: 'discription', field: 'discription' },\r\n    { headerName: 'order_Date', field: 'orderDate' },\r\n    { headerName: 'expected_Delivery_Date', field: 'expectedDeliveryDate' },\r\n    { headerName: 'logistic_Name', field: 'logisticName' },\r\n    { headerName: 'awbNo', field: 'awbNo' },\r\n    { headerName: 'coupon_Code', field: 'couponCode' },\r\n    {\r\n      headerName: \"Action\", field: \"displayOrderId\",\r\n      cellRenderer: (params) => <div>\r\n        <Button variant=\"primary\" onClick={() => updatehandler(params.data)}>Edit</Button>\r\n        <Button variant=\"danger\" onClick={() => deletehandler(params.value)}>Delete</Button>\r\n      </div>\r\n    }\r\n  ]);\r\n\r\n  const getOrders = async () => {\r\n    const result = await axios.get('http://localhost:8080/getcustomerorders')\r\n    console.log(result.data);\r\n    setRowData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n\r\n  const updatehandler = async (olddata) => {\r\n    const result = await axios.get(`http://localhost:8080/employee/${olddata}`)\r\n    setRowData(result.data);\r\n  };\r\n\r\n\r\n  const deletehandler = async (displayOrderId) => {\r\n    await axios.delete(`http://localhost:8080/deleteorder/${displayOrderId}`)\r\n    getOrders();\r\n  }\r\n\r\n  // Apply settings across all columns\r\n  const defaultColDef = useMemo(() => ({\r\n    filter: true,\r\n    editable: true,\r\n  }), []);\r\n\r\n  // Container: Defines the grid's theme & dimensions.\r\n  return (\r\n    <div>\r\n      <div className={\"ag-theme-quartz\"} style={{ width: '1000px', height: '500px', margin: '10px', padding: '1px' }} >\r\n        <div align='right'>\r\n        <Button variant=\"primary\">place order</Button>\r\n        </div>\r\n        <AgGridReact\r\n          rowData={rowData}\r\n          columnDefs={colDefs}\r\n          defaultColDef={defaultColDef}\r\n          pagination={true}\r\n          rowSelection=\"multiple\"\r\n        />\r\n      </div>\r\n      <NewOrder open={open} handleClose = {handleClose}/>\r\n    </div>\r\n  );\r\n};\r\nexport default GridExample;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}