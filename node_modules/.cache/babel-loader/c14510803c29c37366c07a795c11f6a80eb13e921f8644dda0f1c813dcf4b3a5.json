{"ast":null,"code":"var _jsxFileName = \"E:\\\\oms_reactJs\\\\oms\\\\src\\\\agGridTable\\\\GridExample.jsx\",\n  _s = $RefreshSig$();\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport React, { useEffect, useMemo, useState } from 'react';\n//import { createRoot } from 'react-dom/client';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n/* Format Date Cells */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dateFormatter = params => {\n  return new Date(params.value).toLocaleDateString('en-us', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n// Create new GridExample component\nconst GridExample = () => {\n  _s();\n  // Row Data: The data to be displayed.\n  const [rowData, setRowData] = useState([]);\n\n  // Column Definitions: Defines & controls grid columns.\n  const [colDefs] = useState([{\n    headerName: 'display_OrderId',\n    field: 'displayOrderId'\n  }, {\n    headerName: 'customer_Name',\n    field: 'customerName'\n  }, {\n    headerName: 'product_Name',\n    field: 'productName'\n  }, {\n    headerName: 'customer_Name',\n    field: 'customerName'\n  }, {\n    headerName: 'mobile_No',\n    field: 'mobileNo'\n  }, {\n    headerName: 'model_No',\n    field: 'modelNo'\n  },\n  // {headerName:'Product_Color', field: 'ProductColor' },\n  {\n    headerName: 'category',\n    field: 'category'\n  }, {\n    headerName: 'sub_Category',\n    field: 'subCategory'\n  }, {\n    headerName: 'discription',\n    field: 'discription'\n  }, {\n    headerName: 'order_Date',\n    field: 'orderDate'\n  }, {\n    headerName: 'expected_Delivery_Date',\n    field: 'expectedDeliveryDate'\n  }, {\n    headerName: 'logistic_Name',\n    field: 'logisticName'\n  }, {\n    headerName: 'awbNo',\n    field: 'awbNo'\n  }, {\n    headerName: 'coupon_Code',\n    field: 'couponCode'\n  }, {\n    headerName: \"Action\",\n    field: \"displayOrderId\",\n    cellRenderer: params => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => updatehandler(params.data),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => deletehandler(params.value),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this)\n  }]);\n  const getOrders = async () => {\n    const result = await axios.get('http://localhost:8080/getcustomerorders');\n    console.log(result.data);\n    setRowData(result.data);\n  };\n  useEffect(() => {\n    getOrders();\n  }, []);\n  const updatehandler = async olddata => {\n    const result = await axios.get(`http://localhost:8080/employee/${olddata}`);\n    setRowData(result.data);\n  };\n  const deletehandler = async displayOrderId => {\n    await axios.delete(`http://localhost:8080/deleteorder/${displayOrderId}`);\n    getOrders();\n  };\n\n  // Apply settings across all columns\n  const defaultColDef = useMemo(() => ({\n    filter: true,\n    editable: true\n  }), []);\n\n  // Container: Defines the grid's theme & dimensions.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-quartz\",\n      style: {\n        width: '1000px',\n        height: '500px',\n        margin: '10px',\n        padding: '1px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Contained\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          rowData: rowData,\n          columnDefs: colDefs,\n          defaultColDef: defaultColDef,\n          pagination: true,\n          rowSelection: \"multiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(GridExample, \"8L1/7IT+SiIiY2GRjEnodfH1n1g=\");\n_c = GridExample;\nexport default GridExample;\nvar _c;\n$RefreshReg$(_c, \"GridExample\");","map":{"version":3,"names":["AgGridReact","React","useEffect","useMemo","useState","Button","axios","jsxDEV","_jsxDEV","dateFormatter","params","Date","value","toLocaleDateString","weekday","year","month","day","GridExample","_s","rowData","setRowData","colDefs","headerName","field","cellRenderer","children","variant","onClick","updatehandler","data","fileName","_jsxFileName","lineNumber","columnNumber","deletehandler","getOrders","result","get","console","log","olddata","displayOrderId","delete","defaultColDef","filter","editable","className","style","width","height","margin","padding","columnDefs","pagination","rowSelection","_c","$RefreshReg$"],"sources":["E:/oms_reactJs/oms/src/agGridTable/GridExample.jsx"],"sourcesContent":["\r\n\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\n//import { createRoot } from 'react-dom/client';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\n/* Format Date Cells */\r\nconst dateFormatter = (params) => {\r\n  return new Date(params.value).toLocaleDateString('en-us', {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n};\r\n// Create new GridExample component\r\nconst GridExample = () => {\r\n  // Row Data: The data to be displayed.\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  // Column Definitions: Defines & controls grid columns.\r\n  const [colDefs] = useState([\r\n\r\n    { headerName: 'display_OrderId', field: 'displayOrderId' },\r\n    { headerName: 'customer_Name', field: 'customerName' },\r\n    { headerName: 'product_Name', field: 'productName' },\r\n    { headerName: 'customer_Name', field: 'customerName' },\r\n    { headerName: 'mobile_No', field: 'mobileNo' },\r\n    { headerName: 'model_No', field: 'modelNo' },\r\n    // {headerName:'Product_Color', field: 'ProductColor' },\r\n    { headerName: 'category', field: 'category' },\r\n    { headerName: 'sub_Category', field: 'subCategory' },\r\n    { headerName: 'discription', field: 'discription' },\r\n    { headerName: 'order_Date', field: 'orderDate' },\r\n    { headerName: 'expected_Delivery_Date', field: 'expectedDeliveryDate' },\r\n    { headerName: 'logistic_Name', field: 'logisticName' },\r\n    { headerName: 'awbNo', field: 'awbNo' },\r\n    { headerName: 'coupon_Code', field: 'couponCode' },\r\n    {\r\n      headerName: \"Action\", field: \"displayOrderId\",\r\n      cellRenderer: (params) => <div>\r\n        <Button variant=\"primary\" onClick={() => updatehandler(params.data)}>Edit</Button>\r\n        <Button variant=\"danger\" onClick={() => deletehandler(params.value)}>Delete</Button>\r\n      </div>\r\n    }\r\n  ]);\r\n\r\n  const getOrders = async () => {\r\n    const result = await axios.get('http://localhost:8080/getcustomerorders')\r\n    console.log(result.data);\r\n    setRowData(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n\r\n  const updatehandler = async (olddata) => {\r\n    const result = await axios.get(`http://localhost:8080/employee/${olddata}`)\r\n    setRowData(result.data);\r\n  };\r\n\r\n\r\n  const deletehandler = async (displayOrderId) => {\r\n    await axios.delete(`http://localhost:8080/deleteorder/${displayOrderId}`)\r\n    getOrders();\r\n  }\r\n\r\n  // Apply settings across all columns\r\n  const defaultColDef = useMemo(() => ({\r\n    filter: true,\r\n    editable: true,\r\n  }), []);\r\n\r\n  // Container: Defines the grid's theme & dimensions.\r\n  return (\r\n    <div>\r\n      <div className={\"ag-theme-quartz\"} style={{ width: '1000px', height: '500px', margin: '10px', padding: '1px' }} >\r\n        <div>\r\n          <Button variant=\"contained\">Contained</Button>\r\n        </div>\r\n        <div>\r\n          <AgGridReact\r\n            rowData={rowData}\r\n            columnDefs={colDefs}\r\n            defaultColDef={defaultColDef}\r\n            pagination={true}\r\n            rowSelection=\"multiple\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GridExample;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}